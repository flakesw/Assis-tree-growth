# add in linear PC2
mod9 <-  expression((lmer(inc_11_16 ~
scale(log(dg.2011.cm)) +
scale(BA.above2011) * C.Cerrado..G.generalist. +
poly(PC1, 2) + PC2 +
(1|Code),
data = subset(all_data, inc_11_16 >= -0.2 & dg.2011.cm > 0))))
# quadratic PC2
mod10 <- expression((lmer(inc_11_16 ~
scale(log(dg.2011.cm)) +
scale(BA.above2011) * C.Cerrado..G.generalist. +
poly(PC1, 2) + poly(PC2, 2) +
(1|Code),
data = subset(all_data, inc_11_16 >= -0.2 & dg.2011.cm > 0))))
mod11 <- expression((lmer(inc_11_16 ~
scale(log(dg.2011.cm)) +
scale(TBA.2011.m2.ha.1) * C.Cerrado..G.generalist. +
poly(PC1, 2) + poly(PC2, 2) +
(1|Code),
data = subset(all_data, inc_11_16 >= -0.2 & dg.2011.cm > 0))))
model_list <- c(paste0("mod", seq(1:11)))
model_summary <- list(model_names = model_list,
models_fit = lapply(model_list, FUN = function(x){eval(eval(str2expression(x)))}))
model_summary$n_params <- lapply(model_summary$models_fit, function(x){attributes(logLik(x))$df})
model_summary$AICc <- lapply(model_summary$models_fit, function(x){AICc(x)})
model_summary$R2m <- lapply(model_summary$models_fit, function(x){r.squaredGLMM(x)[1,1]})
model_summary$R2c <- lapply(model_summary$models_fit, function(x){r.squaredGLMM(x)[1,2]})
model_table <- data.frame(model_number = model_list,
desc = NA,
n_params = unlist(model_summary$n_params),
AICc = unlist(model_summary$AICc),
R2m = unlist(model_summary$R2m),
R2c = unlist(model_summary$R2c))
write.csv(model_table, "./model outputs/model_table_11_16.csv")
#----------------------------------------------------------------------
# Full model: FT x CI interaction with soils
# = model 10 from above
# all_data$inc_06_11_rel <- all_data$inc_06_11/all_data$dg.2006.cm
# all_data$inc_11_16_rel <- all_data$inc_11_16/all_data$dg.2011.cm
options(na.action = na.omit)
data_06 <- subset(all_data, inc_06_11 >= -0.2 & dg.2006.cm > 0)
data_11 <- subset(all_data, inc_11_16 >= -0.2 & dg.2011.cm > 0)
ft_ci_soils_06 <- lmer(inc_06_11 ~
scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(PC1, 2) + poly(PC2, 2) +
(1|Code),
data = data_06)
ft_ci_soils_11 <- lmer(inc_11_16 ~
scale(log(dg.2011.cm)) +
scale(BA.above2011) * C.Cerrado..G.generalist. +
poly(PC1, 2) + poly(PC2, 2) +
(1|Code),
data = data_11)
summary(ft_ci_soils_06)
summary(ft_ci_soils_11)
write.csv(summary(ft_ci_soils_06)$coef, "./model outputs/model_coefs_06.csv")
write.csv(summary(ft_ci_soils_11)$coef, "./model outputs/model_coefs_11.csv")
plot(residuals(ft_ci_soils_06) ~ fitted(ft_ci_soils_06))
abline(h = 0)
ggqqplot(residuals(ft_ci_soils_06))
plot(allEffects(ft_ci_soils_06, partial.residuals = FALSE))
plot(Effect(focal.predictors = c("BA.above2006", "C.Cerrado..G.generalist."),
mod = ft_ci_soils_06, transformation = list(link = log, inverse = exp)))
plot(Effect(focal.predictors = c("dg.2006.cm", "C.Cerrado..G.generalist."),
mod = ft_ci_soils_06, transformation = list(link = log, inverse = exp)))
plot(Effect(focal.predictors = c("PC1"),
mod = ft_ci_soils_06, transformation = list(link = log, inverse = exp)))
plot(residuals(ft_ci_soils_11) ~ fitted(ft_ci_soils_11))
abline(h = 0)
ggqqplot(residuals(ft_ci_soils_11))
plot(allEffects(ft_ci_soils_11, partial.residuals = FALSE))
plot(Effect(focal.predictors = c("BA.above2006", "C.Cerrado..G.generalist."),
mod = ft_ci_soils_11, transformation = list(link = log, inverse = exp)))
plot(Effect(focal.predictors = c("dg.2006.cm", "C.Cerrado..G.generalist."),
mod = ft_ci_soils_11, transformation = list(link = log, inverse = exp)))
plot(Effect(focal.predictors = c("PC1"),
mod = ft_ci_soils_11, transformation = list(link = log, inverse = exp)))
#making sure everything converged okay; I think I stole this from Ben Bolker
# derivs1 <- ft_ci_soils_06@optinfo$derivs
# sc_grad1 <- with(derivs1,solve(Hessian,gradient))
# max(abs(sc_grad1))
# max(pmin(abs(sc_grad1),abs(derivs1$gradient)))
#
# relgrad <- with(ft_ci_soils_06@optinfo$derivs,solve(Hessian,gradient))
# max(abs(relgrad))
library(lattice)
qqmath(ranef(ft_ci_soils_06, condVar = TRUE), strip = FALSE)$Code
# TODO revise with two intervals
## Species growth rates (appendix table 1)
ranef_sp_06 <- exp(ranef(ft_ci_soils_06, condVar = TRUE)$Code)
ranef_sp_11 <- exp(ranef(ft_ci_soils_11, condVar = TRUE)$Code)
ranef_sp_df_06 <- data.frame(rel_growth_06 = ranef_sp_06$`(Intercept)`,
Code = rownames(ranef_sp_06))
ranef_sp_df_11 <- data.frame(rel_growth_11 = ranef_sp_11$`(Intercept)`,
Code = rownames(ranef_sp_11))
ranef_sp_df <- join(ranef_sp_df_06, ranef_sp_df_11, by = "Code", type = "full")
ranef_sp_df <- join(ranef_sp_df,
tree_data[, c("Code",
"Species..names.not.updated.",
"Family",
"C.Cerrado..G.generalist.",
"Shade.Tolerance")],
by = c("Code"),
type = "left",
match = "first")
ranef_sp_df <- ranef_sp_df[order(ranef_sp_df$rel_growth_06), ]
sp_table <- as.data.frame(table(all_data_pos$Code))
names(sp_table) <- c("Code", "Freq")
ranef_sp_df <- join(ranef_sp_df, sp_table, by = c("Code"))
write.csv(ranef_sp_df, "./model outputs/species_growth_rates.csv")
ranef_sp_df
sp_table <- as.data.frame(table(all_data$Code))
names(sp_table) <- c("Code", "Freq")
sp_table
# TODO revise with two intervals
## Species growth rates (appendix table 1)
ranef_sp_06 <- exp(ranef(ft_ci_soils_06, condVar = TRUE)$Code)
ranef_sp_11 <- exp(ranef(ft_ci_soils_11, condVar = TRUE)$Code)
ranef_sp_df_06 <- data.frame(rel_growth_06 = ranef_sp_06$`(Intercept)`,
Code = rownames(ranef_sp_06))
ranef_sp_df_11 <- data.frame(rel_growth_11 = ranef_sp_11$`(Intercept)`,
Code = rownames(ranef_sp_11))
ranef_sp_df <- join(ranef_sp_df_06, ranef_sp_df_11, by = "Code", type = "full")
ranef_sp_df <- join(ranef_sp_df,
tree_data[, c("Code",
"Species..names.not.updated.",
"Family",
"C.Cerrado..G.generalist.",
"Shade.Tolerance")],
by = c("Code"),
type = "left",
match = "first")
ranef_sp_df <- ranef_sp_df[order(ranef_sp_df$rel_growth_06), ]
sp_table <- as.data.frame(table(all_data$Code))
names(sp_table) <- c("Code", "Freq")
ranef_sp_df <- join(ranef_sp_df, sp_table, by = c("Code"))
write.csv(ranef_sp_df, "./model outputs/species_growth_rates.csv")
ranef_sp_df
mort_ft_ci_soils_glm_2011 <- glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006)*C.Cerrado..G.generalist. +
poly(PC1, 2),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
mort_ft_ci_soils_glm_2016 <- glm(Died2016 ~ scale(log(dg.2011.cm)) +
scale(BA.above2011)*C.Cerrado..G.generalist.,
data = all_data[all_data$dg.2011.cm > 0, ],
family = binomial(link = "logit"))
mort_ft_ci_soils_glm_2011 <- glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006)*C.Cerrado..G.generalist. +
poly(PC1, 2),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
glm(Died2011 ~ scale(log(dg.2006.cm))
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
glm(Died2011 ~ scale(log(dg.2006.cm)),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
# linear soils
mod3 <- expression(glm(Died2011 ~ scale(PC1) + scale(PC2),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit")))
glm(Died2011 ~ scale(PC1) + scale(PC2),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
glm(Died2011 ~ scale(log(dg.2006.cm)),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
glm(Died2011 ~ poly(PC1, 2) + poly(PC2, 2),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
all_data$PC1
all_data$PC2
data06
data_06
glm(Died2011 ~ scale(log(dg.2006.cm)),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
glm(Died2011 ~ scale(log(dg.2006.cm)),
data = data_06,
family = binomial(link = "logit"))
glm(Died2011 ~ scale(PC1) + scale(PC2),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
glm(Died2011 ~ poly(PC1, 2) + poly(PC2, 2),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
str(all_data$PC1)
nrow(all_data[all_data$dg.2006.cm > 0, ])
!is.null(all_data$PC1)
nrow(all_data[all_data$dg.2006.cm > 0 & !is.null(all_data$PC1), ])
# quadratic soils
mod4 <- expression(glm(Died2011 ~ poly(PC1, 2) + poly(PC2, 2),
data = all_data[all_data$dg.2006.cm > 0 & !is.null(all_data$PC1), ],
family = binomial(link = "logit")))
# quadratic soils
mod4 <- expression(glm(Died2011 ~ poly(PC1, 2) + poly(PC2, 2),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit")))
# just size and competition
mod5 <- expression(glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit")))
glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist.,
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
glm(Died2011 ~ scale(log(dg.2006.cm))* C.Cerrado..G.generalist. +
scale(BA.above2006) * C.Cerrado..G.generalist.,
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(PC1, 2),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(PC1, 2),
data = all_data[all_data$dg.2006.cm > 0 & !(is.null(PC1)), ],
family = binomial(link = "logit"))
glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(PC1, 2),
data = all_data[all_data$dg.2006.cm > 0 & !(is.null(all_data$PC1)), ],
family = binomial(link = "logit"))
View(all_data)
all_data$PC1
glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(as.numeric(PC1), 2),
data = all_data[all_data$dg.2006.cm > 0, ],
family = binomial(link = "logit"))
all_data[all_data$dg.2006.cm > 0, ]
glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(as.numeric(PC1), 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit"))
glm(Died2011 ~  scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(PC1, 2) + PC2,
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit"))
glm(Died2011 ~  scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(PC1, 2) + poly(PC2, 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit"))
#only include PC1 because PC2 increases the AIC
mod11 <- expression(glm(Died2011 ~  scale(log(dg.2006.cm)) +
scale(TBA.2006.m2ha.1) * C.Cerrado..G.generalist. +
poly(PC1, 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
glm(Died2011 ~  scale(log(dg.2006.cm)) +
scale(TBA.2006.m2ha.1) * C.Cerrado..G.generalist. +
poly(PC1, 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit"))
mod1 <- expression(glm(Died2011 ~ scale(log(dg.2006.cm)),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# linear soils
mod2 <- expression(glm(Died2011 ~ scale(PC1) + scale(PC2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# quadratic soils
mod3 <- expression(glm(Died2011 ~ poly(PC1, 2) + poly(PC2, 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# just size and competition
mod4 <- expression(glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# let FTs differ in competition susceptibility
mod5 <- expression(glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist.,
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# let FTs also differ in diameter-growth relationships
# doesn't help AIC
mod6 <- expression(glm(Died2011 ~ scale(log(dg.2006.cm))* C.Cerrado..G.generalist. +
scale(BA.above2006) * C.Cerrado..G.generalist.,
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# add in PC1
mod7 <- expression(glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(as.numeric(PC1), 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# add in linear PC2
mod8 <-  expression(glm(Died2011 ~  scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(PC1, 2) + PC2,
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# quadratic PC2
mod9 <- expression(glm(Died2011 ~  scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(PC1, 2) + poly(PC2, 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
#only include PC1 because PC2 increases the AIC
mod10 <- expression(glm(Died2011 ~  scale(log(dg.2006.cm)) +
scale(TBA.2006.m2ha.1) * C.Cerrado..G.generalist. +
poly(PC1, 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
model_list <- c(paste0("mod", seq(1:1)))
model_summary <- list(model_names = model_list,
models_fit = lapply(model_list, FUN = function(x){eval(eval(str2expression(x)))}))
model_summary$n_params <- lapply(model_summary$models_fit, function(x){attributes(logLik(x))$df})
model_summary$AICc <- lapply(model_summary$models_fit, function(x){AICc(x)})
model_summary$R2m <- lapply(model_summary$models_fit, function(x){r.squaredGLMM(x)[1,1]})
model_summary$R2c <- lapply(model_summary$models_fit, function(x){r.squaredGLMM(x)[1,2]})
model_table <- data.frame(model_number = model_list,
desc = NA,
n_params = unlist(model_summary$n_params),
AICc = unlist(model_summary$AICc),
R2m = unlist(model_summary$R2m),
R2c = unlist(model_summary$R2c))
write.csv(model_table, "./model outputs/model_table_06_11_mortality.csv")
model_table
model_list
model_list <- c(paste0("mod", seq(1:10)))
model_summary <- list(model_names = model_list,
models_fit = lapply(model_list, FUN = function(x){eval(eval(str2expression(x)))}))
model_summary$n_params <- lapply(model_summary$models_fit, function(x){attributes(logLik(x))$df})
model_summary$AICc <- lapply(model_summary$models_fit, function(x){AICc(x)})
model_summary$R2m <- lapply(model_summary$models_fit, function(x){r.squaredGLMM(x)[1,1]})
model_summary$R2c <- lapply(model_summary$models_fit, function(x){r.squaredGLMM(x)[1,2]})
model_table <- data.frame(model_number = model_list,
desc = NA,
n_params = unlist(model_summary$n_params),
AICc = unlist(model_summary$AICc),
R2m = unlist(model_summary$R2m),
R2c = unlist(model_summary$R2c))
model_table
glm(Died2016 ~ scale(PC1) + scale(PC2),
data = subset(all_data, dg.2011.cm > 0),
family = binomial(link = "logit"))
glm(Died2016 ~ scale(log(dg.2011.cm)) +
scale(BA.above2011) * C.Cerrado..G.generalist. +
poly(as.numeric(PC1), 2),
data = subset(all_data, dg.2011.cm > 0),
family = binomial(link = "logit"))
glm(Died2016 ~  scale(log(dg.2011.cm)) +
scale(BA.above2011) * C.Cerrado..G.generalist. +
poly(PC1, 2) + poly(PC2, 2),
data = subset(all_data, dg.2011.cm > 0),
family = binomial(link = "logit"))
glm(Died2016 ~  scale(log(dg.2011.cm)) +
scale(BA.above2011) * C.Cerrado..G.generalist. +
poly(PC1, 2) + PC2,
data = subset(all_data, dg.2011.cm > 0),
family = binomial(link = "logit"))
glm(Died2016 ~ scale(log(dg.2011.cm)) +
scale(BA.above2011) * C.Cerrado..G.generalist. +
poly(as.numeric(PC1), 2),
data = subset(all_data, dg.2011.cm > 0),
family = binomial(link = "logit"))
glm(Died2016 ~ scale(log(dg.2011.cm))* C.Cerrado..G.generalist. +
scale(BA.above2011) * C.Cerrado..G.generalist.,
data = subset(all_data, dg.2011.cm > 0),
family = binomial(link = "logit"))
model_list <- c(paste0("mod", seq(1:10)))
model_summary <- list(model_names = model_list,
models_fit = lapply(model_list, FUN = function(x){eval(eval(str2expression(x)))}))
model_summary$n_params <- lapply(model_summary$models_fit, function(x){attributes(logLik(x))$df})
model_summary$AICc <- lapply(model_summary$models_fit, function(x){AICc(x)})
model_summary$R2m <- lapply(model_summary$models_fit, function(x){r.squaredGLMM(x)[1,1]})
model_summary$R2c <- lapply(model_summary$models_fit, function(x){r.squaredGLMM(x)[1,2]})
model_table <- data.frame(model_number = model_list,
desc = NA,
n_params = unlist(model_summary$n_params),
AICc = unlist(model_summary$AICc),
R2m = unlist(model_summary$R2m),
R2c = unlist(model_summary$R2c))
write.csv(model_table, "./model outputs/model_table_11_16_mortality.csv")
model_table
mod1 <- expression(glm(Died2011 ~ scale(log(dg.2006.cm)),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# linear soils
mod2 <- expression(glm(Died2011 ~ scale(PC1) + scale(PC2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# quadratic soils
mod3 <- expression(glm(Died2011 ~ poly(PC1, 2) + poly(PC2, 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# just size and competition
mod4 <- expression(glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# let FTs differ in competition susceptibility
mod5 <- expression(glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist.,
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# let FTs also differ in diameter-growth relationships
# doesn't help AIC
mod6 <- expression(glm(Died2011 ~ scale(log(dg.2006.cm))* C.Cerrado..G.generalist. +
scale(BA.above2006) * C.Cerrado..G.generalist.,
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# add in PC1
mod7 <- expression(glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(as.numeric(PC1), 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# add in linear PC2
mod8 <-  expression(glm(Died2011 ~  scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(PC1, 2) + PC2,
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
# quadratic PC2
mod9 <- expression(glm(Died2011 ~  scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(PC1, 2) + poly(PC2, 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
#only include PC1 because PC2 increases the AIC
mod10 <- expression(glm(Died2011 ~  scale(log(dg.2006.cm)) +
scale(TBA.2006.m2ha.1) * C.Cerrado..G.generalist. +
poly(PC1, 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit")))
model_list <- c(paste0("mod", seq(1:10)))
model_summary <- list(model_names = model_list,
models_fit = lapply(model_list, FUN = function(x){eval(eval(str2expression(x)))}))
model_summary$n_params <- lapply(model_summary$models_fit, function(x){attributes(logLik(x))$df})
model_summary$AICc <- lapply(model_summary$models_fit, function(x){AICc(x)})
model_summary$R2m <- lapply(model_summary$models_fit, function(x){r.squaredGLMM(x)[1,1]})
model_summary$R2c <- lapply(model_summary$models_fit, function(x){r.squaredGLMM(x)[1,2]})
model_table <- data.frame(model_number = model_list,
desc = NA,
n_params = unlist(model_summary$n_params),
AICc = unlist(model_summary$AICc),
R2m = unlist(model_summary$R2m),
R2c = unlist(model_summary$R2c))
model_table
#------------------------------------------------------------------------------
mort_ft_ci_soils_glm_2011 <- glm(Died2016 ~ scale(log(dg.2011.cm)) +
scale(BA.above2011) * C.Cerrado..G.generalist. +
poly(as.numeric(PC1), 2),
data = subset(all_data, dg.2011.cm > 0),
family = binomial(link = "logit"))
summary(mort_ft_ci_soils_glm_2011)
r.squaredGLMM(mort_ft_ci_soils_glm_2011)
AIC(mort_ft_ci_soils_glm_2011)
plot.roc(mort_ft_ci_soils_glm_2011$y,
fitted(mort_ft_ci_soils_glm_2011),print.auc = TRUE,
col = "green", lty = 2)
plot(Effect(mort_ft_ci_soils_glm_2011,
focal.predictors = c("BA.above2006", "C.Cerrado..G.generalist.")))
#------------------------------------------------------------------------------
mort_ft_ci_soils_glm_2011 <- glm(Died2016 ~ scale(log(dg.2011.cm)) +
scale(BA.above2011) * C.Cerrado..G.generalist. +
poly(PC1, 2),
data = subset(all_data, dg.2011.cm > 0),
family = binomial(link = "logit"))
plot(Effect(mort_ft_ci_soils_glm_2011,
focal.predictors = c("BA.above2006", "C.Cerrado..G.generalist.")))
#------------------------------------------------------------------------------
mort_ft_ci_soils_glm_2011 <- glm(Died2011 ~ scale(log(dg.2006.cm)) +
scale(BA.above2006) * C.Cerrado..G.generalist. +
poly(PC1, 2),
data = subset(all_data, dg.2006.cm > 0),
family = binomial(link = "logit"))
summary(mort_ft_ci_soils_glm_2011)
mort_ft_ci_soils_glm_2016 <- glm(Died2016 ~ scale(log(dg.2011.cm)) +
scale(BA.above2011) * C.Cerrado..G.generalist. +
poly(PC1, 2),
data = subset(all_data, dg.2011.cm > 0),
family = binomial(link = "logit"))
summary(mort_ft_ci_soils_glm_2016)
library("flora")
?flora
flora
?flora-package
?`flora-package`
new_names <- suggest.names(ranef_sp_df$Species..names.not.updated.)
new_names
ranef_sp_df$Species..names.not.updated.
apply(ranef_sp_df$Species..names.not.updated., FUN = suggest.names)
vapply(ranef_sp_df$Species..names.not.updated., FUN = suggest.names)
?apply
new_names <- sapply(ranef_sp_df$Species..names.not.updated., FUN = suggest.names)
new_names
old_names <- sapply(ranef_sp_df$Species..names.not.updated., FUN = remove.authors)
old_names
new_names <- sapply(old_names, FUN = suggest.names)
new_names
old_names
get.synonyms(new_names[1])
get.taxa(new_names)$`scientific.name`
new_names <- get.taxa(new_names)$`scientific.name`
ranef_sp_df$Species..names.not.updated. <- new_names
write.csv(ranef_sp_df, "./model outputs/species_growth_rates.csv")
